// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSLCertificateTrackingWebApp.Data;

namespace SSLCertificateTrackingWebApp.Migrations
{
    [DbContext(typeof(SSLCertificateTrackingWebAppContext))]
    [Migration("20210412161727_SSLCertificateTracking")]
    partial class SSLCertificateTracking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SSLCertificateTrackingWebApp.Models.CertificateCategory", b =>
                {
                    b.Property<int>("CertificateCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertificateCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CertificateCategoryID");

                    b.ToTable("CertificateCategory");
                });

            modelBuilder.Entity("SSLCertificateTrackingWebApp.Models.CertificateInfo", b =>
                {
                    b.Property<int>("CertificateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Approver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CMCert")
                        .HasColumnType("bit");

                    b.Property<int>("CertificateCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CertificateEffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CertificateExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CertificateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeclinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DiscoveredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DomainMember")
                        .HasColumnType("bit");

                    b.Property<string>("Hosted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IssuedFromNewPKI")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReplacedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RevokedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServersInstalledOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialistWhoIssued")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectAlternativeNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkOrderNumber")
                        .HasColumnType("int");

                    b.HasKey("CertificateID");

                    b.ToTable("CertificateInfo");
                });

            modelBuilder.Entity("SSLCertificateTrackingWebApp.Models.EmailServerConfiguration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPServer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmailServerConfiguration");
                });
#pragma warning restore 612, 618
        }
    }
}
